{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Escritorio/NextJS/estados/src/Componentes/Contador/Contador.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Hook useSate funciones especiales que nos permite controlar el estado de un componente funcional.\n// [variable, funcionParaSetearElValor]\nexport function Contador(props) {\n  _s();\n  const [count, setCount] = useState(0);\n  //useEffect nos permite hacer efectos secundarios como una peticiona un backend a la hora de cargar este\n  // componente\n  useEffect(() => {\n    document.title = \"Haz hecho click\" + count + \"veces\";\n  }, [count]);\n  // En caso de que count cambie se ejecuta denuevo todo el useEffect putamadre ! .\n\n  //segundo argumento van los diferentes valores al pendiente de nuestro usserEffect.\n  //useEffect nos permite manipular el DOM (elementos de la pagina web.).\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Haz hecho click \", count, \" veces\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(count + 1);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Haz click aca ! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Contador, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = Contador;\nvar _c;\n$RefreshReg$(_c, \"Contador\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Contador","props","_s","count","setCount","document","title","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/abraham/Escritorio/NextJS/estados/src/Componentes/Contador/Contador.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ninterface contadorProps {}\n// Hook useSate funciones especiales que nos permite controlar el estado de un componente funcional.\n// [variable, funcionParaSetearElValor]\nexport function Contador(props: contadorProps): JSX.Element {\n  const [count, setCount] = useState(0);\n  //useEffect nos permite hacer efectos secundarios como una peticiona un backend a la hora de cargar este\n  // componente\n  useEffect(() => {\n    document.title = \"Haz hecho click\" + count + \"veces\";\n  }, [count]);\n  // En caso de que count cambie se ejecuta denuevo todo el useEffect putamadre ! .\n\n  //segundo argumento van los diferentes valores al pendiente de nuestro usserEffect.\n  //useEffect nos permite manipular el DOM (elementos de la pagina web.).\n\n  return (\n    <>\n      <div>\n        <p> Haz hecho click {count} veces</p>\n        <button\n          onClick={() => {\n            setCount(count + 1);\n          }}\n        >\n          <h2> Haz click aca ! </h2>\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,KAAoB,EAAe;EAAAC,EAAA;EAC1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA;EACAD,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACC,KAAK,GAAG,iBAAiB,GAAGH,KAAK,GAAG,OAAO;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX;;EAEA;EACA;;EAEA,oBACEN,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,GAAG,mBAAiB,EAACJ,KAAK,EAAC,QAAM;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrCd,OAAA;QACEe,OAAO,EAAEA,CAAA,KAAM;UACbR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;QACrB,CAAE;QAAAI,QAAA,eAEFV,OAAA;UAAAU,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACN,CAAC;AAEP;AAACT,EAAA,CA1BeF,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}