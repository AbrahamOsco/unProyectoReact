{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Escritorio/NextJS/estados/src/Componentes/Contador/Contador.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Hook useSate funciones especiales que nos permite controlar el estado de un componente funcional.\n// [variable, funcionParaSetearElValor]\nexport function Contador(props) {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Haz hecho click \", count, \" veces\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(count + 1);\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Haz click aca ! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Contador, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Contador;\nvar _c;\n$RefreshReg$(_c, \"Contador\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Contador","props","_s","count","setCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/abraham/Escritorio/NextJS/estados/src/Componentes/Contador/Contador.tsx"],"sourcesContent":["import { useState } from \"react\";\n\ninterface contadorProps {}\n// Hook useSate funciones especiales que nos permite controlar el estado de un componente funcional.\n// [variable, funcionParaSetearElValor]\nexport function Contador(props: contadorProps): JSX.Element {\n  const [count, setCount] = useState(0);\n\n  return (\n    <>\n      <div>\n        <p> Haz hecho click {count} veces</p>\n        <button\n          onClick={() => {\n            setCount(count + 1);\n          }}\n        >\n          {\" \"}\n          <h2> Haz click aca ! </h2>{\" \"}\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,KAAoB,EAAe;EAAAC,EAAA;EAC1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,oBACEE,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,GAAG,mBAAiB,EAACF,KAAK,EAAC,QAAM;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrCZ,OAAA;QACEa,OAAO,EAAEA,CAAA,KAAM;UACbN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;QACrB,CAAE;QAAAE,QAAA,GAED,GAAG,eACJR,OAAA;UAAAQ,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAAC,GAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACN,CAAC;AAEP;AAACP,EAAA,CAlBeF,QAAQ;AAAAW,EAAA,GAARX,QAAQ;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}