{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Escritorio/NextJS/estados/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./App.scss\";\nimport { Contador } from \"./Componentes/Contador/Contador\";\nimport { Form } from \"./Componentes/Form/Form\";\nimport { List } from \"./Componentes/List/list\";\n\n// recomendacion tener una interfaz donde cada propiedad sean los\n// posibles estados de ese componente.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// un array de objetos que entiendne el contrato de sub.\nconst INITIAL_STATE = [{\n  nick: \"Dylan Cafferatas\",\n  subMonths: 4,\n  avatar: \"https://i.pravatar.cc/250\",\n  description: \" Vivve en miami\"\n}, {\n  nick: \"Darko\",\n  subMonths: 5,\n  avatar: \"https://i.pravatar.cc/650\",\n  description: \"Vivve en la villa 1-11-14 \"\n}];\nfunction App() {\n  _s();\n  // <Array<Sub> > array de subs, o tambien  <Sub[]> como quieras.\n  const [subs, setSubs] = useState([]);\n  const [newSubNumber, setNewSubNumber] = useState(0);\n  useEffect(() => {\n    setSubs(INITIAL_STATE);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Contador, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Subs \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      subs: subs,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"pepito Hola que onda \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onNewSub: setSubs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"C9IgEf0BRSC9DFuTQON+Z55fPyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Contador","Form","List","jsxDEV","_jsxDEV","Fragment","_Fragment","INITIAL_STATE","nick","subMonths","avatar","description","App","_s","subs","setSubs","newSubNumber","setNewSubNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","onNewSub","_c","$RefreshReg$"],"sources":["/home/abraham/Escritorio/NextJS/estados/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./App.scss\";\nimport { Contador } from \"./Componentes/Contador/Contador\";\nimport { Form } from \"./Componentes/Form/Form\";\nimport { Sub } from \"./types\";\nimport { List } from \"./Componentes/List/list\";\n\n// recomendacion tener una interfaz donde cada propiedad sean los\n// posibles estados de ese componente.\n\ninterface AppState {\n  subs: Array<Sub>;\n  newSubNumber: number;\n}\n// un array de objetos que entiendne el contrato de sub.\nconst INITIAL_STATE = [\n  {\n    nick: \"Dylan Cafferatas\",\n    subMonths: 4,\n    avatar: \"https://i.pravatar.cc/250\",\n    description: \" Vivve en miami\",\n  },\n  {\n    nick: \"Darko\",\n    subMonths: 5,\n    avatar: \"https://i.pravatar.cc/650\",\n    description: \"Vivve en la villa 1-11-14 \",\n  },\n];\n\nfunction App() {\n  // <Array<Sub> > array de subs, o tambien  <Sub[]> como quieras.\n  const [subs, setSubs] = useState<AppState[\"subs\"]>([]);\n  const [newSubNumber, setNewSubNumber] = useState<AppState[\"newSubNumber\"]>(0);\n\n  useEffect(() => {\n    setSubs(INITIAL_STATE);\n  }, []);\n\n  return (\n    <>\n      <Contador />\n      <h1> Subs </h1>\n      <List subs={subs}>\n        {\" \"}\n        <h1>pepito Hola que onda </h1>{\" \"}\n      </List>\n      <Form onNewSub={setSubs} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAO,WAAW;AAClB,OAAO,YAAY;AACnB,SAASC,QAAQ,QAAQ,iCAAiC;AAC1D,SAASC,IAAI,QAAQ,yBAAyB;AAE9C,SAASC,IAAI,QAAQ,yBAAyB;;AAE9C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMA;AACA,MAAMC,aAAa,GAAG,CACpB;EACEC,IAAI,EAAE,kBAAkB;EACxBC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,2BAA2B;EACnCC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,IAAI,EAAE,OAAO;EACbC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,2BAA2B;EACnCC,WAAW,EAAE;AACf,CAAC,CACF;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAmB,EAAE,CAAC;EACtD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAA2B,CAAC,CAAC;EAE7ED,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACR,aAAa,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACJ,QAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZlB,OAAA;MAAAc,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACflB,OAAA,CAACF,IAAI;MAACY,IAAI,EAAEA,IAAK;MAAAI,QAAA,GACd,GAAG,eACJd,OAAA;QAAAc,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACPlB,OAAA,CAACH,IAAI;MAACsB,QAAQ,EAAER;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC3B,CAAC;AAEP;AAACT,EAAA,CApBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}