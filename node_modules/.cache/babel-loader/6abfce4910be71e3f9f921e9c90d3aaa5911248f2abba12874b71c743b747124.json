{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Escritorio/NextJS/estados/src/Componentes/Contador/Contador.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Hook useSate funciones especiales que nos permite controlar el estado de un componente funcional.\n// [variable, funcionParaSetearElValor]\nexport function Contador(props) {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Contador\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_s(Contador, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Contador;\nvar _c;\n$RefreshReg$(_c, \"Contador\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Contador","props","_s","count","setCount","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abraham/Escritorio/NextJS/estados/src/Componentes/Contador/Contador.tsx"],"sourcesContent":["import { useState } from \"react\";\n\ninterface contadorProps {}\n// Hook useSate funciones especiales que nos permite controlar el estado de un componente funcional.\n// [variable, funcionParaSetearElValor]\nexport function Contador(props: contadorProps): JSX.Element {\n  const [count, setCount] = useState(0);\n\n  return <div>Contador</div>;\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,KAAoB,EAAe;EAAAC,EAAA;EAC1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAErC,oBAAOE,OAAA;IAAAM,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC5B;AAACP,EAAA,CAJeF,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}