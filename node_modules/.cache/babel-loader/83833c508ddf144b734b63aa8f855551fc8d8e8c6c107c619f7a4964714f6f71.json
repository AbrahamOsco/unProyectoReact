{"ast":null,"code":"var _jsxFileName = \"/home/abraham/Escritorio/NextJS/estados/src/Componentes/List/list.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//\n//supuesto problema con esto es que acepta children (eso en versiones vieja ahora)\n// es necesario explicitamente escribir que necesitamos children.\nexport const List = _ref => {\n  let {\n    subs\n  } = _ref;\n  const renderList = () => {};\n  return /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["List","_ref","subs","renderList","_jsxDEV","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abraham/Escritorio/NextJS/estados/src/Componentes/List/list.tsx"],"sourcesContent":["interface Props {\n  children: React.ReactNode;\n  subs: Array<{\n    nick: string;\n    subMonths: number;\n    avatar: string;\n    description: string;\n  }>;\n  /*\n  children:\n  En interfaces el children se usa para pasar elementos hijos a un componente.\n  ReactNode; Agregamos esto si queremos soportar children.\n  con esto un componente acepta contenido entre sus etiquetas y podemos\n  acceder a ese contenido\n<unComponente>\n  <h1>TÃ­tulo</h1>\n  <p>Contenido del componente</p>\n</unComponente>\n    Vemos que h1 y p son elementos hijos del componente \"unComponente\".  \n*/\n}\n\n//\n//supuesto problema con esto es que acepta children (eso en versiones vieja ahora)\n// es necesario explicitamente escribir que necesitamos children.\nexport const List: React.FC<Props> = ({ subs }) => {\n  const renderList = () => {};\n\n  return <ul></ul>;\n};\n"],"mappings":";;AAsBA;AACA;AACA;AACA,OAAO,MAAMA,IAAqB,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EAC5C,MAAME,UAAU,GAAGA,CAAA,KAAM,CAAC,CAAC;EAE3B,oBAAOC,OAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAClB,CAAC;AAACC,EAAA,GAJWT,IAAqB;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}